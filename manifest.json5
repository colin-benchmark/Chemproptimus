{
    "name": "Chemproptimus",
    "config": {
        "comms": {
            "address": 0x20,
            "port": 0x0A
        }
    },
    "components": {
        "device": {
            "description": "Returns information about the software running on the board",
            "attributes": {
                "version": {
                    "type": "uint8_t",
                    "rows": 3,
                    "description":"Major, minor and patch version number",
                    "default": [0, 1, 0],
                    "readonly": true
                },
                "manufacturer": {
                    "type": "uint8_t",
                    "rows": 9,
                    "description": "Will return benchmark",
                    /* manufacturer: benchmark */
                    "default": [0x62, 0x65, 0x6E, 0x63, 0x68, 0x6D, 0x61, 0x72, 0x6B],
                    "readonly": true
                },
                "serial_number": {
                    "type": "uint8_t",
                    "rows": 8,
                    "description":"The serial number of the device. Can only be written with the correct Codeword written to the EEPROM component",
                    "default": [0, 0, 0, 0, 0, 0, 0, 0],
                    "readonly": true
                },
                "build": {
                    "type": "uint32_t",
                    "description": "SHA of current commit at build",
                    "default": 0,
                    "readonly": true
                },
                "bootcounter": {
                    "type": "uint16_t",
                    "description": "Number of times this device has been booted",
                    "default": 0,
                    "readonly": true,
                    "persistent": true
                },
                "status": {
                    "type": "uint16_t",
                    "description": "Bit-code indication of device health",
                    "default": 0,
                    "readonly": true
                },
                "last_error": {
                    "type": "uint8_t",
                    "description": "The last error code generated by an operation made on the device. Cleared after reading.",
                    "default": 0,
                    "readonly": true
                },
                "log_level": {
                    "type": "uint8_t",
                    "description": "Enable verbose debugging of the platform. Primarily this will enable outputting messages via the secondary comms port. This may also mean enabling certain features not required for nominal operations. The level will define the verbosity of this output with 0 meaning NO DEBUG",
                    "default": 0,
                },
                "checksum": {
                    "type": "uint32_t",
                    "description": "On boot generate a checksum based on the firmware loaded to aid in identifying its version if other tests fail. Also provides a method of detecting firmware image corruption",
                    "default": 0,
                    "readonly": true
                }
            },
            "methods": {
                "print_verison": {
                    "description": "Print device information to debug port"
                },
                "reboot": {
                    "description": "Reboot the device"
                },
                "calculate_checksum": {
                    "description": "Update value in `device.checksum`"
                }
            }
        },
        "debug": {
            "description": "Sets the level of verbosity of debug messaging available from the device.",
            "attributes": {
                "enabled": {
                    "type": "bool",
                    "rows": 4,
                    "description": "Which debug output levels are enabled: 0 - Error, 1 - Warning, 2 - Info, 3 - Debug",
                    "default": [true, true, true, true]
                }
            }
        },
        "telemetry": {
            "description": "The telemetry component gives access to the various measurements taken pertaining to the operation of the device.",
            "attributes": {
                "temperature": {
                    "type": "float",
                    "description": "Temperatures of various device elements",
                    "rows": 8,
                    "readonly": true
                },
                "capacitor_voltage": {
                    "description": "The measured voltage across the buck-boost capacitor",
                    "type": "float",
                    "readonly": true
                },
                "shots": {
                    "type": "uint32_t",
                    "desription": "Number of shots taken by each head",
                    "rows": 4,
                    "readonly": true
                }
            },
            "methods": {}
        },
        "nvm": {
            "description": "The device's Flash is used to permanently store information across its entire operational life. On boot the flash is read and a cached copy of these settings is available to the application. If this cached copy is updated then it is written back to flash.",
            "attributes": {
                "length": {
                    "type": "uint32_t",
                    "description": "Number of bytes used by NVM storage",
                    "readonly": true,
                    "read_callback": true
                
                },
                "valid": {
                    "type": "bool",
                    "description": "Confirm the Flash has been initialised for NVM data",
                    "readonly": true,
                    "read_callback": true
                },
                "update_required": {
                    "type": "bool",
                    "description": "True if there's a difference between the NVM contents and component values",
                    "readonly": true,
                    "read_callback": true
                }
            },
            "methods": {
                "reset": {
                    "description": "Reset the EEPROM to a set of known working defaults. Requires the correct Codeword to be written in the EEPROM component"
                },
                "store": {
                    "description": "Write cached copy of NVM data to Flash"
                },
                "load": {
                    "description": "Read NVM data in Flash to cache"
                }
            }
        },
    }
}