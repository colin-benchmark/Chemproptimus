#include <stdint.h>
#include <stdbool.h>

/**********************************************************
 * Autogenerated code. Don't edit as it'll be overwritten
 *********************************************************/

#ifndef FIRING_ATTRIBUTES_H
#define FIRING_ATTRIBUTES_H

#define FIRING_ATTRIBUTE_INDUCTOR_CHARGE_TIME_ROWS (4)
#define FIRING_ATTRIBUTE_FIRING_PATTERN_ROWS (16)
#define FIRING_ATTRIBUTE_CAPACITOR_CHARGE_TIME_ROWS (0)
#define FIRING_ATTRIBUTE_SHOTS_REMAINING_ROWS (0)
#define FIRING_ATTRIBUTE_CYCLES_REMAINING_ROWS (0)
#define FIRING_ATTRIBUTE_TARGET_POWER_ROWS (0)
#define FIRING_ATTRIBUTE_FIRING_MODE_ROWS (0)
#define FIRING_ATTRIBUTE_ENABLED_ROWS (0)
#define FIRING_ATTRIBUTE_SAFETY_OVERRIDE_ROWS (0)
#define FIRING_ATTRIBUTE_TOTAL_ISP_ROWS (0)


#define FIRING_ATTRIBUTE_INDUCTOR_CHARGE_TIME_ID (0)
#define FIRING_ATTRIBUTE_FIRING_PATTERN_ID (1)
#define FIRING_ATTRIBUTE_CAPACITOR_CHARGE_TIME_ID (2)
#define FIRING_ATTRIBUTE_SHOTS_REMAINING_ID (3)
#define FIRING_ATTRIBUTE_CYCLES_REMAINING_ID (4)
#define FIRING_ATTRIBUTE_TARGET_POWER_ID (5)
#define FIRING_ATTRIBUTE_FIRING_MODE_ID (6)
#define FIRING_ATTRIBUTE_ENABLED_ID (7)
#define FIRING_ATTRIBUTE_SAFETY_OVERRIDE_ID (8)
#define FIRING_ATTRIBUTE_TOTAL_ISP_ID (9)


typedef struct _firing_attributes {
    uint16_t inductor_charge_time[FIRING_ATTRIBUTE_INDUCTOR_CHARGE_TIME_ROWS]; /* Time in ms to release charge from capacitor into an inductor, where N represents the number of thruster heads (and therefore inductors) */
    uint8_t firing_pattern[FIRING_ATTRIBUTE_FIRING_PATTERN_ROWS]; /* The order in which individual thrusters should be fired when performing a firing cycle. */
    uint16_t capacitor_charge_time; /* Time in ms the firing capacitor should be charged for */
    uint16_t shots_remaining; /* Number of shots remaining when in shot-firing mode */
    uint16_t cycles_remaining; /* Number of cycles remaining when in cycle-firing mode */
    uint16_t target_power; /* When in adaptive-mode attempt to consistently fire at this target power */
    uint8_t firing_mode; /* 0 - Adaptive mode: Attempt to hit a target power by automatically adjusting the firing time of each show. 1 - Fixed mode: Use the values provided by the Firing components timing attributes. */
    bool enabled; /* This is probably wrong and needs untangled */
    bool safety_override; /* Allows for values to be written to the firing parameters which are outwith the recommended bounds */
    uint16_t total_isp; /* Total impulse */
} firing_attributes;



#endif
